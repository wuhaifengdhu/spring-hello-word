<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init = "true"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
     http://www.springframework.org/schema/context 
     http://www.springframework.org/schema/context/spring-context-4.3.xsd 
     http://www.springframework.org/schema/rabbit
     http://www.springframework.org/schema/rabbit/spring-rabbit-1.6.xsd">
     
	<!--configure connection-factoryï¼Œset parameters to connect rabbit server  -->
	<rabbit:connection-factory id="connectionFactory"
		username="${rabbitmq.username}" 
		password="${rabbitmq.password}" 
		host="${rabbitmq.host}" 
		port="${rabbitmq.port}"
		virtual-host="${rabbitmq.vhost}"
		cache-mode="${rabbitmq.cacheMode}"
		connection-timeout="${rabbitmq.connectionTimeout}"
		channel-cache-size="${rabbitmq.channelCacheSize}"
		publisher-returns="true" 
   		publisher-confirms="true" />
		
	<!--use the account to generate the exchange&queue of producer in rabbitmq server -->
	<rabbit:admin connection-factory="connectionFactory" />
		
	<!--set rabbit template for sending&receiving messages -->
	<rabbit:template id="amqpTemplate"  connection-factory="connectionFactory" exchange="emailExchange" message-converter="jsonMessageConverter" />
	
	<!-- convert messages to json format -->
    <bean id="jsonMessageConverter" class="org.springframework.amqp.support.converter.SimpleMessageConverter" /> 

	<!--define queue -->
	<rabbit:queue name="emailQueue" durable="true" auto-delete="false" exclusive="false" />

	<!-- define the direct exchange for email queue -->
	<rabbit:direct-exchange name="emailExchange" durable="true" auto-delete="false">
		<rabbit:bindings>
			<rabbit:binding queue="emailQueue" key="emailQueueKey"></rabbit:binding>
		</rabbit:bindings>
	</rabbit:direct-exchange>
	
	<!-- message receiver -->
	<bean id="emailMessageReceiver" class="sg.ntu.itcm.listener.RabbitEmailMessageListener"></bean>
	
	<!-- queue listener, when message comes, listener will notify the related queue-->
    <rabbit:listener-container connection-factory="connectionFactory">
             <rabbit:listener queues="emailQueue" ref="emailMessageReceiver"/>
    </rabbit:listener-container>
	
</beans>